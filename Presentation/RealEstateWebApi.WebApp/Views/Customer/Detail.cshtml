@using RealEstateWebApi.WebApp.Tools;
@{
    ViewData["Title"] = "Müşteri Detayı";
}

@model Tuple<CustomerDto, IEnumerable<EntryDto>, IEnumerable<CustomerSearchPropertyDto>,IEnumerable<CustomerOwnedPropertyDto>, Customer,IEnumerable<Reminder>>




<div class="pagetitle">
    <h1>Müşteri Detayı</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/"><i class="bi bi-house-door"></i></a></li>
            <li class="breadcrumb-item"><a href="/customer">Müşteriler</a></li>
            <li class="breadcrumb-item active">@Model.Item1.FullName</li>
        </ol>
    </nav>
</div><!-- End Page Title -->

<section class="section">
    <div class="row">
        <div class="col-lg-4">

            <div class="card overflow-auto">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">
                            @if (Model.Item1.IsActive)
                            {
                                <span class="badge bg-success text-white">Aktif</span>
                            }
                            else
                            {
                                <span class="badge bg-danger text-white">Deaktif</span>
                            }
                            @if (Model.Item1.StatusKey == "YENI")
                            {
                                <span class="badge bg-danger">Yeni</span>
                            }else if (Model.Item1.StatusKey == "ULSLMD"){
                                <span class="badge bg-danger">Ulaşılamadı</span>
                            }else{
                                <span class="badge bg-secondary">@Model.Item1.Status</span>
                            }
                        </h5>
                        @if (Context.User.Claims.FirstOrDefault(e => e.Type ==
                        System.Security.Claims.ClaimTypes.Role)?.Value == "Admin")
                        {
                            


                            <div class="btn-group" role="group">
                                @if (!Model.Item1.IsActive)
                                {
                                    <a asp-controller="Admin" asp-action="ActivateCustomer"
                                        asp-route-customerId="@Model.Item1.Id" class="btn btn-outline-success">Onayla</a>
                                }

                                <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                                    data-bs-target="#customerUpdateModal">
                                    <i class="bi bi-pencil-square"></i>
                                </button>

                                <button class="btn btn-danger" type="button" data-bs-toggle="modal"
                                    data-bs-target="#customerDeleteModal">
                                    <i class="bi bi-trash"></i>
                                </button>


                            </div>
                            var customer = Model.Item5;
                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_CustomerUpdateModal.cshtml", customer);
                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_CustomerDeleteModal.cshtml", customer);

                        }
                    </div>
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-start">
                            <strong>Id:</strong>
                            @Model.Item1.Id
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Nationality Id:</strong>
                            @Model.Item1.CitizenNumber
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Adı:</strong>
                            @Model.Item1.FirstName
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Soyadı:</strong>
                            @Model.Item1.LastName
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Doğum Tarihi:</strong>
                            @if (Model.Item1.BirthDay.HasValue)
                            {
                                @Model.Item1.BirthDay.Value.ToString("dd-MM-yyyy")
                            }
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Cep Telefonu:</strong>
                            <div class="row">                           
                                <div class="col"><i class="bi bi-telephone text-success"></i> @Model.Item1.MobileNumber</div>
                                @if(!string.IsNullOrEmpty(Model.Item1.MobileNumber2)) {<div class="col"><i class="bi bi-telephone-fill text-second"></i> @Model.Item1.MobileNumber2</div>}
                            </div>     
                            
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Sabit Telefonu:</strong>
                            <div class="row">                           
                                @if(!string.IsNullOrEmpty(Model.Item1.PhoneNumber)) {<div class="col"><i class="bi bi-telephone-fill text-second"></i> @Model.Item1.PhoneNumber</div>}
                                @if(!string.IsNullOrEmpty(Model.Item1.PhoneNumber2)) {<div class="col"><i class="bi bi-telephone-fill text-second"></i> @Model.Item1.PhoneNumber2</div>}
                            </div>  
                        </li>
                        <li class="list-group-item d-flex justify-content-center align-items-center">
                            
                            @Model.Item1.City / @Model.Item1.District @if(!string.IsNullOrEmpty(Model.Item1.Neighborhood)) {<p>/ @Model.Item1.Neighborhood</p>}

                        </li>
                        <li class="list-group-item d-flex justify-content-center align-items-center">
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"> <strong>Register :</strong> @Model.Item1.RegisterUser </li>
                                <li class="list-group-item"><strong>Yetkili :</strong> @Model.Item1.AssignedUser</li>
                            </ul>             
                        </li>

                    </ul>
                </div>
            </div>

        </div>

        <div class="col-lg-8">

            <div class="card overflow-auto">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Hareketler</h5>
                        <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                            data-bs-target="#entryModal">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                        @{
                            var entry = new Entry()
            {
                CustomerId = @Model.Item1.Id,
            };
                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_EntryAddModal.cshtml", entry);
                        }

                    </div>


                    <table class="table table-striped datatableMiniEntry">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">İçerik</th>
                                <th scope="col">Kullanıcı</th>
                                <th scope="col">Tarih</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item2)
                            {

                                <tr>
                                    <th scope="row">
                                        @item.EntryType > @item.EntrySubType > @item.EntrySubTitle

                                    </th>
                                    <td>@item.Content</td>
                                    <td>@item.User</td>
                                    <td>@item.CreatedDate.UtcToLocalTR().ToString("dd-MM-yyyy HH:mm")</td>
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col">
            <div class="card overflow-auto">
                <div class=card-body>
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Kendi Mülkleri</h5>
                        <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                            data-bs-target="#ownedPropertyModal">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                        @{
                            CustomerOwnedProperty ownedShortProperty = new CustomerOwnedProperty()
            {
                CustomerId = Model.Item1.Id
            };

                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_OwnedPropertyAddModal.cshtml",
                            ownedShortProperty);
                        }

                    </div>


                    <table class="table table-striped datatableMini">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Kategori</th>
                                <th scope="col">Tipi</th>
                                <th scope="col">Statüsü</th>
                                <th scope="col">Oda</th>
                                <th scope="col">Adres</th>
                                <th scope="col">Fiyat</th>
                                <th scope="col">Oluşturma</th>
                                <th scope="col">İlan Tarihi</th>
                                <th scope="col">Açıklama</th>
                                <th scope="col">Linkler</th>
                                <th scope="col">-</th>


                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item4)
                            {
                                <tr>
                                    <th scope="row">
                                        @item.Id

                                    </th>
                                    @if (item.OuterPropertyListing != null)
                                    {
                                        

                                        await Html.RenderPartialAsync("~/Views/Customer/Modal/_OwnedPropertyDetailModal.cshtml",
                                        Tuple.Create(item.OuterPropertyListing, item.PropertyListingPhotos));

                                    }
                                    <td>@item.PropertyCategory</td>
                                    <td>@item.PropertyType</td>
                                    <td>@item.PropertyStatus</td>
                                    <td>@($"{item.RoomCount}+{item.LivingRoomCount}")</td>
                                    <td>@item.City / @item.District / @item.Neighborhood</td>
                                    <td>
                                        <div class="d-inline">
                                            @item.Price?.ToString("##,#₺")
                                        </div>
                                    </td>
                                    <td>
                                        @item.CreatedDate.UtcToLocalTR().ToString("dd/MM/yyyy HH:mm")
                                    </td>

                                    <td>@item.OuterPropertyListing?.ListingDate.GetValueOrDefault().Date.ToString("dd/MM/yyy")</td>
                                    <td class="text-wrap" style="max-width: 26rem; max-height: 4.5rem;" >@item.Description?.Substring(0, Math.Min(150, @item.Description.Length))@(item.Description?.Length > 150 ? "..." : "")</td>
                                    <td>
                                        @if (!String.IsNullOrWhiteSpace(item.ShLink))
                                        {
                                            <a href="@item.ShLink" target="_blank" rel="noopener noreferrer">

                                                <span class="badge rounded-pill bg-warning text-dark">Sahibinden</span>
                                            </a>
                                        }
                                        @if (!String.IsNullOrWhiteSpace(item.EjLink))
                                        {
                                            <a href="@item.EjLink" target="_blank" rel="noopener noreferrer">
                                                <span class="badge rounded-pill bg-success">Emlakjet</span>
                                            </a>
                                        }
                                        @if (!String.IsNullOrWhiteSpace(item.HeLink))
                                        {

                                            <a href="@item.HeLink" target="_blank" rel="noopener noreferrer">
                                                <span class="badge rounded-pill bg-danger">Hepsiemlak</span>
                                            </a>
                                        }
                                        @if (!String.IsNullOrWhiteSpace(item.OtherLink))
                                        {
                                            <a href="@item.OtherLink" target="_blank" rel="noopener noreferrer">
                                                <span class="badge rounded-pill bg-info text-dark">Diğer</span>
                                            </a>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            @if (Context.User.Claims.FirstOrDefault(e => e.Type ==
                                           System.Security.Claims.ClaimTypes.Role)?.Value == "Admin")
                                            {
                                                <a class="btn btn-danger btn-sm" asp-controller="Admin"
                                                    asp-action="DeleteOwnedProperty" asp-route-cospId="@item.Id"><i
                                                        class="bi bi-trash"></i></a>
                                            }
                                            @if (item.OuterPropertyListing != null)
                                            {
                                                string IdString = $"#modal{item.OuterPropertyListing.Id.ToString()}";

                                                <button class="btn btn-sm btn-info" type="button" data-bs-toggle="modal"
                                                    data-bs-target="@IdString">
                                                    Detail
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card overflow-auto">
                <div class=card-body>
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Aradığı Mülkler</h5>
                        <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                            data-bs-target="#searchPropertyModal">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                        @{
                            CustomerSearchProperty searchShortProperty = new CustomerSearchProperty()
            {
                CustomerId = Model.Item1.Id
            };

                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_SearchPropertyAddModal.cshtml",
                            searchShortProperty);
                        }

                    </div>


                    <table class="table table-striped datatableMini">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Kategori</th>
                                <th scope="col">Tipi</th>
                                <th scope="col">Statüsü</th>
                                <th scope="col">Oda</th>
                                <th scope="col">Adres</th>
                                <th scope="col">Fiyat</th>
                                <th scope="col">Açıklama</th>
                                <th scope="col">-</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item3)
                            {

                                <tr>
                                    <th scope="row">
                                        @item.Id

                                    </th>
                                    <td>@item.PropertyCategory</td>
                                    <td>@item.PropertyType</td>
                                    <td>@item.PropertyStatus</td>
                                    <td>@($"{item.RoomCount}+{item.LivingRoomCount}")</td>
                                    <td>@item.City / @item.District / @item.Neighborhood / @item.Street</td>
                                    <td>@item.Price.ToString("##,#₺")</td>
                                    <td>@item.Description</td>
                                    @if (Context.User.Claims.FirstOrDefault(e => e.Type ==
                                   System.Security.Claims.ClaimTypes.Role)?.Value == "Admin")
                                    {
                                        <td><a class="btn btn-danger btn-sm" asp-controller="Admin"
                                                asp-action="DeleteSearchProperty" asp-route-csspId="@item.Id"><i
                                                    class="bi bi-trash"></i></a></td>
                                    }
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card overflow-auto">
                <div class=card-body>
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Hatırlatmalar</h5>
                    </div>
                    <table class="table table-striped datatableMini">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Kayıt Günü</th>
                                <th scope="col">Açıklama</th>
                                <th scope="col">Hatırlatma Günü</th>
                                <th scope="col">-</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item6)
                            {

                                <tr>
                                    <th scope="row">
                                        @item.Id

                                    </th>
                                    <td>@item.CreatedDate.UtcToLocalTR().ToString("dd-MM-yyyy HH:mm")</td>
                                    <td>@item.Description</td>
                                    <td>@item.ReminderDate.UtcToLocalTR().ToString("dd-MM-yyyy")</td>
                                    @if (Context.User.Claims.FirstOrDefault(e => e.Type ==
                                   System.Security.Claims.ClaimTypes.Role)?.Value == "Admin")
                                    {
                                        <td><a class="btn btn-danger btn-sm" asp-controller="Customer"
                                                asp-action="ReminderCheck" asp-route-reminderId="@item.Id"><i
                                                    class="bi bi-trash"></i></a></td>
                                    }
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
