@using RealEstateWebApi.WebApp.Tools;
@{
    ViewData["Title"] = "Müşteri Detayı";
}

@model Tuple<CustomerDto,IEnumerable<EntryDto>,IEnumerable<CustomerSearchPropertyDto>,IEnumerable<CustomerOwnedPropertyDto>,Customer>




<div class="pagetitle">
    <h1>Müşteri Detayı</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/"><i class="bi bi-house-door"></i></a></li>
            <li class="breadcrumb-item"><a href="/customer">Müşteriler</a></li>
            <li class="breadcrumb-item active">@Model.Item1.FullName</li>
        </ol>
    </nav>
</div><!-- End Page Title -->

<section class="section">
    <div class="row">
        <div class="col-lg-4">

            <div class="card overflow-auto">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">
                            @if (Model.Item1.IsActive)
                            {
                                <span class="badge bg-success text-white">Aktif</span>
                            }
                            else
                            {
                                <span class="badge bg-danger text-white">Deaktif</span>
                            }
                            <span class="badge bg-secondary text-white">@Model.Item1.Status</span>
                        </h5>
                        @if (Context.User.Claims.FirstOrDefault(e => e.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "Admin")
                        {
                            <div class="btn-group" role="group">
                                @if (!Model.Item1.IsActive)
                                {
                                    <a asp-controller="Admin" asp-action="ActivateCustomer" asp-route-customerId="@Model.Item1.Id" class="btn btn-outline-success">Onayla</a>
                                }

                                <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                                    data-bs-target="#customerUpdateModal">
                                    <i class="bi bi-pencil-square"></i>
                                </button>

                                <button class="btn btn-danger" type="button" data-bs-toggle="modal"
                                    data-bs-target="#customerDeleteModal">
                                    <i class="bi bi-trash"></i>
                                </button>


                            </div>
                            var customer = Model.Item5;
                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_CustomerUpdateModal.cshtml", customer);
                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_CustomerDeleteModal.cshtml", customer);

                        }
                    </div>
                    <ul class="list-group">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Id:</strong>
                            @Model.Item1.Id
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Nationality Id:</strong>
                            @Model.Item1.CitizenNumber
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Adı:</strong>
                            @Model.Item1.FirstName
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Soy Adı:</strong>
                            @Model.Item1.LastName
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Doğum Tarihi:</strong>
                            @if (Model.Item1.BirthDay.HasValue)
                            {
                                @Model.Item1.BirthDay.Value.ToString("dd-MM-yyyy")
                            }
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Cep Telefonu:</strong>
                            İlk: @Model.Item1.MobileNumber / Diğer: @Model.Item1.MobileNumber2
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Sabit Telefonu:</strong>
                            İlk: @Model.Item1.PhoneNumber / Diğer: @Model.Item1.PhoneNumber2
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Adres:</strong>
                            @Model.Item1.City / @Model.Item1.District / @Model.Item1.Neighborhood

                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <strong>Kayıt:</strong>
                            @Model.Item1.RegisterUser / @Model.Item1.AssignedUser
                        </li>

                    </ul>
                </div>
            </div>

        </div>

        <div class="col-lg-8">

            <div class="card overflow-auto">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Hareketler</h5>
                        <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                                data-bs-target="#entryModal">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                        @{
                            var entry = new Entry()
            {
                CustomerId = @Model.Item1.Id,
            };
                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_EntryAddModal.cshtml", entry);
                        }

                    </div>


                    <table class="table table-striped datatableMiniEntry">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">İçerik</th>
                                <th scope="col">Kullanıcı</th>
                                <th scope="col">Tarih</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item2)
                            {

                                <tr>
                                    <th scope="row">
                                        @item.EntryType > @item.EntrySubType > @item.EntrySubTitle

                                    </th>
                                    <td>@item.Content</td>
                                    <td>@item.User</td>
                                    <td>@item.CreatedDate.UtcToLocalTR().ToString("dd-MM-yyyy HH:mm")</td>
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>

    <div class="row">
        <div class="col">
            <div class="card overflow-auto">
                <div class=card-body>
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Kendi Mülkleri</h5>
                        <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                                data-bs-target="#ownedPropertyModal">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                        @{
                            CustomerOwnedProperty ownedShortProperty = new CustomerOwnedProperty()
            {
                CustomerId = Model.Item1.Id
            };

                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_OwnedPropertyAddModal.cshtml", ownedShortProperty);
                        }

                    </div>


                    <table class="table table-striped datatableMini">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Tipi</th>
                                <th scope="col">Statüsü</th>
                                <th scope="col">Oda</th>
                                <th scope="col">Adres</th>
                                <th scope="col">Fiyat</th>
                                <th scope="col">Açıklama</th>
                                <th scope="col">Mülk Id</th>
                                <th scope="col">Sahibinden</th>
                                <th scope="col">Emlakjet</th>
                                <th scope="col">Hürriyet</th>
                                <th scope="col">Diğer Link</th>
                                <th scope="col">-</th>


                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item4)
                            {
                                <tr>
                                    <th scope="row">
                                        @item.Id

                                    </th>
                                    @if (item.PropertyListingDetail != null)
                                    {
                                        <td>
                                            @item.PropertyListingDetail?.Type

                                        </td>
                                        <td>@item.PropertyListingDetail?.Status</td>
                                        <td>@item.PropertyListingDetail?.RoomCount + @item.PropertyListingDetail?.LivingRoomCount</td>
                                        <td>@item.PropertyListingDetail?.City / @item.PropertyListingDetail?.District / @item.PropertyListingDetail?.Neighborhood</td>
                                        <td><div class="d-inline" > @item.PropertyListingDetail?.Price.ToString("##,#") <span>@item.PropertyListingDetail?.Currency</span></div></td>
                                        <td><div class="overflow-hidden" style="max-height:150px;max-width:250px">@item.PropertyListingDetail?.Description</div></td>



                                        await Html.RenderPartialAsync("~/Views/Customer/Modal/_OwnedPropertyDetailModal.cshtml", Tuple.Create(item.PropertyListingDetail,item.PropertyListingPhotos));

                                    }
                                    else
                                    {
                                        <td>@item.PropertyType</td>
                                        <td>@item.PropertyStatus</td>
                                        <td>@item.RoomCount + @item.LivingRoomCount</td>
                                        <td>@item.City / @item.District / @item.Neighborhood</td>
                                        <td>@item.Price?.ToString("##,#") <span>₺</span></td>
                                        <td>
                                            @item.Description
                                        </td>
                                    }
                                    <td>@item.PropertyId</td>
                                    <td>
                                        <div class="text-truncate" style="max-width:150px">
                                            <a href="@item.ShLink" target="_blank" rel="noopener noreferrer">@item.ShLink</a>
                                        </div>

                                    </td>
                                    <td><div class="text-truncate" style="max-width:150px"><a href="@item.EjLink" target="_blank" rel="noopener noreferrer">@item.EjLink</a></div></td>
                                    <td><div class="text-truncate" style="max-width:150px"><a href="@item.HeLink" target="_blank" rel="noopener noreferrer">@item.HeLink</a></div></td>
                                    <td><div class="text-truncate" style="max-width:150px"><a href="@item.OtherLink" target="_blank" rel="noopener noreferrer">@item.OtherLink</a></div></td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            @if (Context.User.Claims.FirstOrDefault(e => e.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "Admin")
                                            {
                                                <a class="btn btn-danger btn-sm" asp-controller="Admin" asp-action="DeleteOwnedProperty" asp-route-cospId="@item.Id"><i class="bi bi-trash"></i></a>
                                            }
                                            @if (item.PropertyListingDetail != null)
                                            {
                                                string IdString = $"#modal{item.PropertyListingDetail.Id.ToString()}";

                                                <button class="btn btn-sm btn-info" type="button" data-bs-toggle="modal"
                                                data-bs-target="@IdString">
                                                    Detail
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <div class="card overflow-auto">
                <div class=card-body>
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="card-title">Aradığı Mülkler</h5>
                        <button class="btn btn-primary" type="button" data-bs-toggle="modal"
                                data-bs-target="#searchPropertyModal">
                            <i class="bi bi-plus-lg"></i>
                        </button>
                        @{
                            CustomerSearchProperty searchShortProperty = new CustomerSearchProperty()
            {
                CustomerId = Model.Item1.Id
            };

                            await Html.RenderPartialAsync("~/Views/Customer/Modal/_SearchPropertyAddModal.cshtml", searchShortProperty);
                        }

                    </div>


                    <table class="table table-striped datatableMini">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Tipi</th>
                                <th scope="col">Statüsü</th>
                                <th scope="col">Oda</th>
                                <th scope="col">Adres</th>
                                <th scope="col">Fiyat</th>
                                <th scope="col">Açıklama</th>
                                <th scope="col">-</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Item3)
                            {

                                <tr>
                                    <th scope="row">
                                        @item.Id

                                    </th>
                                    <td>@item.PropertyType</td>
                                    <td>@item.PropertyStatus</td>
                                    <td>@item.RoomCount + @item.LivingRoomCount</td>
                                    <td>@item.City / @item.District / @item.Neighborhood / @item.Street</td>
                                    <td>@item.Price.ToString("##,#")</td>
                                    <td>@item.Description</td>
                                    @if (Context.User.Claims.FirstOrDefault(e => e.Type == System.Security.Claims.ClaimTypes.Role)?.Value == "Admin")
                                    {
                                        <td><a class="btn btn-danger btn-sm" asp-controller="Admin" asp-action="DeleteSearchProperty" asp-route-csspId="@item.Id"><i class="bi bi-trash"></i></a></td>
                                    }
                                </tr>
                            }


                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
