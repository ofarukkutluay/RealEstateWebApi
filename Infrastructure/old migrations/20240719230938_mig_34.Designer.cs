// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RealEstateWebApi.Persistence.Contexts;

#nullable disable

namespace RealEstateWebApi.Persistence.Migrations
{
    [DbContext(typeof(RealEstateWebApiDbContext))]
    [Migration("20240719230938_mig_34")]
    partial class mig_34
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Agent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.None);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("text");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("JobTitleId")
                        .HasColumnType("bigint");

                    b.Property<string>("LinkedinUrl")
                        .HasColumnType("text");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ViewMobileNumber")
                        .HasColumnType("text");

                    b.Property<string>("ViewPhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("YoutubeProfileUrl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("JobTitleId");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Blog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long?>("BlogPageImgFileId")
                        .HasColumnType("bigint");

                    b.Property<long>("BlogTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("BlogPageImgFileId");

                    b.HasIndex("BlogTypeId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.BlogType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("BlogTypes");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("Key")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("text");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Dns")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("text");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkedinUrl")
                        .HasColumnType("text");

                    b.Property<long?>("LogoImgFileId")
                        .HasColumnType("bigint");

                    b.Property<string>("SummaryInfo")
                        .HasColumnType("text");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ViewName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LogoImgFileId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("StartingYear")
                        .HasColumnType("integer");

                    b.Property<string>("TaxAdministration")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TaxNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AssignedUserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("CitizenNumber")
                        .HasColumnType("bigint");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber2")
                        .HasColumnType("text");

                    b.Property<long?>("NeighborhoodId")
                        .HasColumnType("bigint");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber2")
                        .HasColumnType("text");

                    b.Property<long>("RegisterUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("StatusKey")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("NeighborhoodId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.CustomerOwnedProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long?>("CityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<string>("EjLink")
                        .HasColumnType("text");

                    b.Property<string>("HeLink")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LivingRoomCount")
                        .HasColumnType("integer");

                    b.Property<long?>("NeighborhoodId")
                        .HasColumnType("bigint");

                    b.Property<string>("OtherLink")
                        .HasColumnType("text");

                    b.Property<string>("OuterPropertyListingId")
                        .HasColumnType("text");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision");

                    b.Property<long?>("PropertyCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyStatusId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PropertyTypeId")
                        .HasColumnType("bigint");

                    b.Property<double?>("RoomCount")
                        .HasColumnType("double precision");

                    b.Property<string>("ShLink")
                        .HasColumnType("text");

                    b.Property<long?>("StreetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PropertyId");

                    b.ToTable("CustomerOwnedProperties");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.CustomerSearchProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int?>("LivingRoomCount")
                        .HasColumnType("integer");

                    b.Property<long?>("NeighborhoodId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<long?>("PropertyCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertyStatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertyTypeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("RoomCount")
                        .HasColumnType("integer");

                    b.Property<long?>("StreetId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerSearchProperties");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.DeedStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("DeedStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Kat Mülkiyetli"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Kat İrtifaklı"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Arsa"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Tarla"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.District", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CityKey")
                        .HasColumnType("integer");

                    b.Property<int>("Key")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Entry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("EntrySubTitle")
                        .HasColumnType("text");

                    b.Property<long>("EntrySubTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("EntryTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EntrySubTypeId");

                    b.HasIndex("EntryTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.EntrySubType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("EntryTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("EntryTypeId");

                    b.ToTable("EntrySubTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "TLFN",
                            Title = "Telefon"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 1L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "ZYRT",
                            Title = "Ziyaret"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "TAKIP",
                            Title = "Takip"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "GRSM",
                            Title = "Görüşme"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 2L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "DOWN",
                            Title = "İstemiyor"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "GIRME",
                            Title = "Girmeden Çalış"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "YETKI",
                            Title = "Yetkili"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "YETKISIZ",
                            Title = "Yetkisiz"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 3L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "PDOWN",
                            Title = "Vazgeçti"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "GLN",
                            Title = "Gelen"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "TAKIP",
                            Title = "Takip"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 4L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "IDOWN",
                            Title = "Kabul Etmedi"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "STLDI",
                            Title = "Satıldı"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 5L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "KRLND",
                            Title = "Kiralandı"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            EntryTypeId = 6L,
                            IsActive = true,
                            IsDeleted = false,
                            Key = "ULSLMD",
                            Title = "Ulaşılamadı"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.EntryType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EntryTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "GRSM",
                            Title = "Görüşme"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "PTNSYL",
                            Title = "Potansiyel"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "ILAN",
                            Title = "İlan"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "TKLF",
                            Title = "Teklif"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "SZLSM",
                            Title = "Sözleşme"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Key = "ULSLMD",
                            Title = "Ulaşılamadı"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.File", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("character varying(21)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Files");

                    b.HasDiscriminator<string>("Discriminator").HasValue("File");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Front", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Fronts");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Kuzey"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Kuzey Doğu"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Doğu"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Güney Doğu"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Güney"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Güney Batı"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Batı"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Kuzey Batı"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.HeatingType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("HeatingTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Doğalgaz Sobalı"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Sobalı"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Yerden Isıtma"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Kombili"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Merkezi Sistem"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "FuelOil"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Identity.OperationClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Alias")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Alias = "ADMIN",
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Admin account",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            Alias = "USER",
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "User account",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "User"
                        },
                        new
                        {
                            Id = 3L,
                            Alias = "AGENT",
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Agent account",
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Agent"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Identity.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("CitizenNumber")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PassHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PassSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<long?>("ProfileImgFileId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ProfileImgFileId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Identity.UserLogin", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RefreshTokenExpireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Identity.UserOperationClaim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("OperationClaimId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimId");

                    b.HasIndex("UserId");

                    b.ToTable("UserOperationClaims");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.InternetType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("InternetTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Adsl/Vdsl"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Fiber"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Uydu"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Altyapı Yok"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.JobTitle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("JobTitles");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("SenderEmail")
                        .HasColumnType("text");

                    b.Property<string>("SenderMobile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Neighborhood", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("DistrictKey")
                        .HasColumnType("integer");

                    b.Property<int>("Key")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Neighborhoods");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.OuterPropertyListing", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<bool?>("AlcoholLicense")
                        .HasColumnType("boolean");

                    b.Property<int?>("ApartCount")
                        .HasColumnType("integer");

                    b.Property<int?>("BathroomCount")
                        .HasColumnType("integer");

                    b.Property<int?>("BedCount")
                        .HasColumnType("integer");

                    b.Property<int?>("BlockNo")
                        .HasColumnType("integer");

                    b.Property<string>("BuildingAge")
                        .HasColumnType("text");

                    b.Property<int?>("BuildingCount")
                        .HasColumnType("integer");

                    b.Property<string>("BuildingFloor")
                        .HasColumnType("text");

                    b.Property<string>("BuildingStatus")
                        .HasColumnType("text");

                    b.Property<string>("BuildingTotalFloor")
                        .HasColumnType("text");

                    b.Property<string>("BuildingType")
                        .HasColumnType("text");

                    b.Property<int?>("CeilingHeightMeters")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DailySaleFuelLiter")
                        .HasColumnType("integer");

                    b.Property<string>("DeedStatus")
                        .HasColumnType("text");

                    b.Property<long?>("DeedStatusId")
                        .HasColumnType("bigint");

                    b.Property<double?>("Deposit")
                        .HasColumnType("double precision");

                    b.Property<string>("DepositCurrency")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DescriptionHtml")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<int?>("ElevatorCount")
                        .HasColumnType("integer");

                    b.Property<int?>("EntryHeightMeters")
                        .HasColumnType("integer");

                    b.Property<bool?>("ExchangeForBuilding")
                        .HasColumnType("boolean");

                    b.Property<double?>("Fees")
                        .HasColumnType("double precision");

                    b.Property<string>("FeesCurrency")
                        .HasColumnType("text");

                    b.Property<double?>("FloorAreaRatio")
                        .HasColumnType("double precision");

                    b.Property<string>("FromProfile")
                        .HasColumnType("text");

                    b.Property<double?>("Gabari")
                        .HasColumnType("double precision");

                    b.Property<string>("Garage")
                        .HasColumnType("text");

                    b.Property<int?>("GrossSquareMeter")
                        .HasColumnType("integer");

                    b.Property<string>("GroundSurvey")
                        .HasColumnType("text");

                    b.Property<string>("HeatingType")
                        .HasColumnType("text");

                    b.Property<long?>("HeatingTypeId")
                        .HasColumnType("bigint");

                    b.Property<int?>("IndoorSquareMeters")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsAvailableLoan")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsBalcony")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsBarter")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsElevator")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsFurnished")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsOnSite")
                        .HasColumnType("boolean");

                    b.Property<int?>("LayoutNo")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ListingDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ListingPhoneNumbers")
                        .HasColumnType("text");

                    b.Property<string>("ListingStoreName")
                        .HasColumnType("text");

                    b.Property<string>("ListingUserName")
                        .HasColumnType("text");

                    b.Property<string>("ListiningLink")
                        .HasColumnType("text");

                    b.Property<int?>("LivingRoomCount")
                        .HasColumnType("integer");

                    b.Property<string>("LocationLat")
                        .HasColumnType("text");

                    b.Property<string>("LocationLon")
                        .HasColumnType("text");

                    b.Property<bool?>("MiningLicense")
                        .HasColumnType("boolean");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("text");

                    b.Property<int?>("OutdoorSquareMeters")
                        .HasColumnType("integer");

                    b.Property<int?>("PeopleCapacity")
                        .HasColumnType("integer");

                    b.Property<string>("PhotoLinks")
                        .HasColumnType("text");

                    b.Property<string>("PhotoPaths")
                        .HasColumnType("text");

                    b.Property<int?>("PlotNo")
                        .HasColumnType("integer");

                    b.Property<double?>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("PriceCurrency")
                        .HasColumnType("text");

                    b.Property<string>("PropertyCategory")
                        .HasColumnType("text");

                    b.Property<string>("PropertyStatus")
                        .HasColumnType("text");

                    b.Property<string>("PropertyType")
                        .HasColumnType("text");

                    b.Property<int?>("PumpCount")
                        .HasColumnType("integer");

                    b.Property<string>("ReconstructionStatus")
                        .HasColumnType("text");

                    b.Property<int?>("RemainingInstallment")
                        .HasColumnType("integer");

                    b.Property<double?>("RemainingPaymentAmount")
                        .HasColumnType("double precision");

                    b.Property<double?>("RoomCount")
                        .HasColumnType("double precision");

                    b.Property<double?>("SectionAndRoomCount")
                        .HasColumnType("double precision");

                    b.Property<string>("SiteName")
                        .HasColumnType("text");

                    b.Property<int?>("SpaceSquareMeters")
                        .HasColumnType("integer");

                    b.Property<int?>("StarCount")
                        .HasColumnType("integer");

                    b.Property<int?>("TableCapacity")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<int?>("TotalLandAcres")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UsableSquareMeter")
                        .HasColumnType("integer");

                    b.Property<string>("UsingStatus")
                        .HasColumnType("text");

                    b.Property<long?>("UsingStatusId")
                        .HasColumnType("bigint");

                    b.Property<int?>("VehicleCapacity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("OuterPropertyListings");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Property", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ClientId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<long>("DistrictId")
                        .HasColumnType("bigint");

                    b.Property<int>("GrossSquareMeter")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<double>("LocationLat")
                        .HasColumnType("double precision");

                    b.Property<double>("LocationLon")
                        .HasColumnType("double precision");

                    b.Property<long>("NeighborhoodId")
                        .HasColumnType("bigint");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<string>("PriceCurrency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("PropertyCategoryId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertyStatusId")
                        .HasColumnType("bigint");

                    b.Property<long>("PropertyTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("StreetId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UsableSquareMeter")
                        .HasColumnType("integer");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgentId");

                    b.HasIndex("CityId");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("PropertyCategoryId");

                    b.HasIndex("PropertyStatusId");

                    b.HasIndex("PropertyTypeId");

                    b.HasIndex("StreetId");

                    b.ToTable("Properties");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Property");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.PropertyCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("PropertyCategories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Konut"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "İşyeri"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Arsa"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Bina"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Turistik Tesis"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.PropertyStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("PropertyCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PropertyCategoryId");

                    b.ToTable("PropertyStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 1L,
                            Title = "Satılık"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 1L,
                            Title = "Kiralık"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 1L,
                            Title = "Günlük Kiralık"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 1L,
                            Title = "Devren Satılık Konut"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 2L,
                            Title = "Satılık"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 2L,
                            Title = "Kiralık"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 2L,
                            Title = "Devren Satılık"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 2L,
                            Title = "Devren Kiralık"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 3L,
                            Title = "Satılık"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 3L,
                            Title = "Kiralık"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 4L,
                            Title = "Satılık"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 4L,
                            Title = "Kiralık"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 5L,
                            Title = "Satılık"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyCategoryId = 5L,
                            Title = "Kiralık"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.PropertyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("PropertyStatusId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PropertyStatusId");

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Daire"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Residence"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Müstakil Ev"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Villa"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Çiftlik Evi"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Köşk & Konak"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Yalı"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Yalı Dairesi"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Yazlık"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Prefabrik Ev"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 1L,
                            Title = "Kooperatif"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Daire"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Residence"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Müstakil Ev"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Villa"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Çiftlik Evi"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Köşk & Konak"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Yalı"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 2L,
                            Title = "Yalı Dairesi"
                        },
                        new
                        {
                            Id = 20L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Daire"
                        },
                        new
                        {
                            Id = 21L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Residence"
                        },
                        new
                        {
                            Id = 22L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Müstakil Ev"
                        },
                        new
                        {
                            Id = 23L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Villa"
                        },
                        new
                        {
                            Id = 24L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Çiftlik Evi"
                        },
                        new
                        {
                            Id = 25L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Köşk & Konak"
                        },
                        new
                        {
                            Id = 26L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Yalı"
                        },
                        new
                        {
                            Id = 27L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 3L,
                            Title = "Yalı Dairesi"
                        },
                        new
                        {
                            Id = 28L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 4L,
                            Title = "Daire"
                        },
                        new
                        {
                            Id = 29L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 4L,
                            Title = "Villa"
                        },
                        new
                        {
                            Id = 30L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Akaryakıt İstasyonu"
                        },
                        new
                        {
                            Id = 31L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Apartman Dairesi"
                        },
                        new
                        {
                            Id = 32L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Atölye "
                        },
                        new
                        {
                            Id = 33L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "AVM"
                        },
                        new
                        {
                            Id = 34L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Büfe"
                        },
                        new
                        {
                            Id = 35L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Büro & Ofis"
                        },
                        new
                        {
                            Id = 36L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Cafe & Bar"
                        },
                        new
                        {
                            Id = 37L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Çiftlik"
                        },
                        new
                        {
                            Id = 38L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Depo & Antrepo"
                        },
                        new
                        {
                            Id = 39L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Düğün Salonu"
                        },
                        new
                        {
                            Id = 40L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Dükkan & Mağaza"
                        },
                        new
                        {
                            Id = 41L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Enerji Santralleri"
                        },
                        new
                        {
                            Id = 42L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Fabrika"
                        },
                        new
                        {
                            Id = 43L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Garaj & Park Yeri"
                        },
                        new
                        {
                            Id = 44L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "İmalathane "
                        },
                        new
                        {
                            Id = 45L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "İş Hanı Katı & Ofisi"
                        },
                        new
                        {
                            Id = 46L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Kantin"
                        },
                        new
                        {
                            Id = 47L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Kır & Kahvaltı Bahçesi"
                        },
                        new
                        {
                            Id = 48L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Kıraathane"
                        },
                        new
                        {
                            Id = 49L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Komple Bina"
                        },
                        new
                        {
                            Id = 50L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Maden Ocağı"
                        },
                        new
                        {
                            Id = 51L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Otopark"
                        },
                        new
                        {
                            Id = 52L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Pastane & Fırın"
                        },
                        new
                        {
                            Id = 53L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Pazar Yeri"
                        },
                        new
                        {
                            Id = 54L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Plaza"
                        },
                        new
                        {
                            Id = 55L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Plaza Katı"
                        },
                        new
                        {
                            Id = 56L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Prefabrik Yapı"
                        },
                        new
                        {
                            Id = 57L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Radyo İstasyonu"
                        },
                        new
                        {
                            Id = 58L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Residence Katı & Ofisi"
                        },
                        new
                        {
                            Id = 59L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Restoran & Lokanta"
                        },
                        new
                        {
                            Id = 60L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Sağlık Merkezi"
                        },
                        new
                        {
                            Id = 61L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Sinema & Konferans Salonu"
                        },
                        new
                        {
                            Id = 62L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "SPA, Hamam & Sauna"
                        },
                        new
                        {
                            Id = 63L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Spor Tesisi "
                        },
                        new
                        {
                            Id = 64L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Villa"
                        },
                        new
                        {
                            Id = 65L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 5L,
                            Title = "Yurt"
                        },
                        new
                        {
                            Id = 66L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Akaryakıt İstasyonu"
                        },
                        new
                        {
                            Id = 67L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Apartman Dairesi"
                        },
                        new
                        {
                            Id = 68L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Atölye"
                        },
                        new
                        {
                            Id = 69L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "AVM"
                        },
                        new
                        {
                            Id = 70L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Büfe"
                        },
                        new
                        {
                            Id = 71L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Büro & Ofis"
                        },
                        new
                        {
                            Id = 72L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Cafe & Bar"
                        },
                        new
                        {
                            Id = 73L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Çiftlik"
                        },
                        new
                        {
                            Id = 74L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Depo & Antrepo"
                        },
                        new
                        {
                            Id = 75L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Düğün Salonu"
                        },
                        new
                        {
                            Id = 76L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Dükkan & Mağaza"
                        },
                        new
                        {
                            Id = 77L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Eczane & Medikal"
                        },
                        new
                        {
                            Id = 78L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Fabrika"
                        },
                        new
                        {
                            Id = 79L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Fotoğraf Stüdyosu"
                        },
                        new
                        {
                            Id = 80L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Garaj"
                        },
                        new
                        {
                            Id = 81L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Hazır & Sanal Ofis"
                        },
                        new
                        {
                            Id = 82L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "İmalathane"
                        },
                        new
                        {
                            Id = 83L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "İş Hanı Katı & Ofisi"
                        },
                        new
                        {
                            Id = 84L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Kantin"
                        },
                        new
                        {
                            Id = 85L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Kır & Kahvaltı Bahçesi "
                        },
                        new
                        {
                            Id = 86L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Kıraathane"
                        },
                        new
                        {
                            Id = 87L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Komple Bina"
                        },
                        new
                        {
                            Id = 88L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Kuaför & Güzellik Merkezi"
                        },
                        new
                        {
                            Id = 89L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Maden Ocağı"
                        },
                        new
                        {
                            Id = 90L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Market"
                        },
                        new
                        {
                            Id = 91L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Muayenehane"
                        },
                        new
                        {
                            Id = 92L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Okul & Kurs"
                        },
                        new
                        {
                            Id = 93L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Otopark"
                        },
                        new
                        {
                            Id = 94L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Oto Yıkama & Kuaför"
                        },
                        new
                        {
                            Id = 95L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Pastane & Fırın"
                        },
                        new
                        {
                            Id = 96L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Pazar Yeri"
                        },
                        new
                        {
                            Id = 97L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Plaza"
                        },
                        new
                        {
                            Id = 98L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Plaza Katı & Ofisi"
                        },
                        new
                        {
                            Id = 99L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Prova & Kayıt Stüdyosu"
                        },
                        new
                        {
                            Id = 100L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Radyo İstasyonu & TV Kanalı"
                        },
                        new
                        {
                            Id = 101L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Residence Katı & Ofisi"
                        },
                        new
                        {
                            Id = 102L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Restoran & Lokanta"
                        },
                        new
                        {
                            Id = 103L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Sağlık Merkezi"
                        },
                        new
                        {
                            Id = 104L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Sinema & Konferans Salonu"
                        },
                        new
                        {
                            Id = 105L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Spa, Hamam & Sauna"
                        },
                        new
                        {
                            Id = 106L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Spor Tesisi"
                        },
                        new
                        {
                            Id = 107L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Taksi Durağı"
                        },
                        new
                        {
                            Id = 108L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Tamirhane"
                        },
                        new
                        {
                            Id = 109L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Villa"
                        },
                        new
                        {
                            Id = 110L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 6L,
                            Title = "Yurt"
                        },
                        new
                        {
                            Id = 111L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Acente"
                        },
                        new
                        {
                            Id = 112L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Akaryakıt İstasyonu"
                        },
                        new
                        {
                            Id = 113L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Aktar & Baharatçı"
                        },
                        new
                        {
                            Id = 114L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Anaokulu & Kreş"
                        },
                        new
                        {
                            Id = 115L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Apartman Dairesi"
                        },
                        new
                        {
                            Id = 116L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Araç Showroom & Servis"
                        },
                        new
                        {
                            Id = 117L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Atölye"
                        },
                        new
                        {
                            Id = 118L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "AVM Standı"
                        },
                        new
                        {
                            Id = 119L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Balıkçı"
                        },
                        new
                        {
                            Id = 120L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Bar"
                        },
                        new
                        {
                            Id = 121L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Bijuteri"
                        },
                        new
                        {
                            Id = 122L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Börekçi"
                        },
                        new
                        {
                            Id = 123L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Büfe"
                        },
                        new
                        {
                            Id = 124L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Büro & Ofis"
                        },
                        new
                        {
                            Id = 125L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Cafe"
                        },
                        new
                        {
                            Id = 126L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "CD & DVD Dükkanı"
                        },
                        new
                        {
                            Id = 127L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Cep Telefonu Dükkanı"
                        },
                        new
                        {
                            Id = 128L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Çamaşırhane"
                        },
                        new
                        {
                            Id = 129L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Çay Ocağı"
                        },
                        new
                        {
                            Id = 130L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Çiçekçi & Fidanlık"
                        },
                        new
                        {
                            Id = 131L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Çiftlik"
                        },
                        new
                        {
                            Id = 132L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Depo & Antrepo"
                        },
                        new
                        {
                            Id = 133L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Düğün Salonu"
                        },
                        new
                        {
                            Id = 134L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Dükkan & Mağaza"
                        },
                        new
                        {
                            Id = 135L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Eczane & Medikal"
                        },
                        new
                        {
                            Id = 136L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Elektrikçi & Hırdavatçı"
                        },
                        new
                        {
                            Id = 137L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Elektronik Mağazası"
                        },
                        new
                        {
                            Id = 138L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Etkinlik & Performans Salonu"
                        },
                        new
                        {
                            Id = 139L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Fabrika & Üretim Tesisi"
                        },
                        new
                        {
                            Id = 140L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Fatura Merkezi"
                        },
                        new
                        {
                            Id = 141L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Fotoğraf Stüdyosu"
                        },
                        new
                        {
                            Id = 142L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Gece Kulübü & Disko"
                        },
                        new
                        {
                            Id = 143L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Giyim Mağazası"
                        },
                        new
                        {
                            Id = 144L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Gözlükçü"
                        },
                        new
                        {
                            Id = 145L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Halı Yıkama"
                        },
                        new
                        {
                            Id = 146L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Huzur Evi"
                        },
                        new
                        {
                            Id = 147L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "İmalathane"
                        },
                        new
                        {
                            Id = 148L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "İnternet & Oyun Cafe"
                        },
                        new
                        {
                            Id = 149L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "İş Hanı"
                        },
                        new
                        {
                            Id = 150L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "İş Hanı Katı & Ofisi"
                        },
                        new
                        {
                            Id = 151L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kantin"
                        },
                        new
                        {
                            Id = 152L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kasap"
                        },
                        new
                        {
                            Id = 153L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kır & Kahvaltı Bahçesi "
                        },
                        new
                        {
                            Id = 154L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kıraathane"
                        },
                        new
                        {
                            Id = 155L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kırtasiye"
                        },
                        new
                        {
                            Id = 156L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kozmetik Mağazası"
                        },
                        new
                        {
                            Id = 157L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kuaför & Güzellik Merkezi"
                        },
                        new
                        {
                            Id = 158L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kurs & Eğitim Merkezi"
                        },
                        new
                        {
                            Id = 159L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kuru Temizleme"
                        },
                        new
                        {
                            Id = 160L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kuruyemişçi"
                        },
                        new
                        {
                            Id = 161L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Kuyumcu"
                        },
                        new
                        {
                            Id = 162L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Lunapark"
                        },
                        new
                        {
                            Id = 163L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Maden Ocağı"
                        },
                        new
                        {
                            Id = 164L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Manav"
                        },
                        new
                        {
                            Id = 165L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Market"
                        },
                        new
                        {
                            Id = 166L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Matbaa"
                        },
                        new
                        {
                            Id = 167L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Modaevi"
                        },
                        new
                        {
                            Id = 168L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Muayenehane"
                        },
                        new
                        {
                            Id = 169L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Nakliyat & Kargo"
                        },
                        new
                        {
                            Id = 170L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Nalbur"
                        },
                        new
                        {
                            Id = 171L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Okul"
                        },
                        new
                        {
                            Id = 172L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Otopark / Garaj"
                        },
                        new
                        {
                            Id = 173L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Oto Servis & Bakım"
                        },
                        new
                        {
                            Id = 174L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Oto Yedek Parça"
                        },
                        new
                        {
                            Id = 175L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Oto Yıkama & Kuaför"
                        },
                        new
                        {
                            Id = 176L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Öğrenci Yurdu"
                        },
                        new
                        {
                            Id = 177L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Pastane & Fırın & Tatlıcı"
                        },
                        new
                        {
                            Id = 178L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Pazar Yeri"
                        },
                        new
                        {
                            Id = 179L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Pet Shop"
                        },
                        new
                        {
                            Id = 180L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Plaza"
                        },
                        new
                        {
                            Id = 181L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Plaza Katı & Ofisi"
                        },
                        new
                        {
                            Id = 182L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Prova & Kayıt Stüdyosu"
                        },
                        new
                        {
                            Id = 183L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Radyo İstasyonu & TV Kanalı"
                        },
                        new
                        {
                            Id = 184L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Residence Katı & Ofisi"
                        },
                        new
                        {
                            Id = 185L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Restoran & Lokanta"
                        },
                        new
                        {
                            Id = 186L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Saat Mağazası"
                        },
                        new
                        {
                            Id = 187L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Sağlık Merkezi"
                        },
                        new
                        {
                            Id = 188L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Sebze & Meyve Hali"
                        },
                        new
                        {
                            Id = 189L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Sinema & Konferans Salonu"
                        },
                        new
                        {
                            Id = 190L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Soğuk Hava Deposu"
                        },
                        new
                        {
                            Id = 191L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "SPA, Hamam & Sauna"
                        },
                        new
                        {
                            Id = 192L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Spor Tesisi"
                        },
                        new
                        {
                            Id = 193L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Su & Tüp Bayi"
                        },
                        new
                        {
                            Id = 194L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Şans Oyunları Bayisi"
                        },
                        new
                        {
                            Id = 195L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Şarküteri"
                        },
                        new
                        {
                            Id = 196L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Taksi Durağı"
                        },
                        new
                        {
                            Id = 197L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Tamirhane"
                        },
                        new
                        {
                            Id = 198L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Tekel Bayi"
                        },
                        new
                        {
                            Id = 199L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Teknik Servis"
                        },
                        new
                        {
                            Id = 200L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Terzi"
                        },
                        new
                        {
                            Id = 201L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Tuhafiye"
                        },
                        new
                        {
                            Id = 202L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Veteriner"
                        },
                        new
                        {
                            Id = 203L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 7L,
                            Title = "Züccaciye"
                        },
                        new
                        {
                            Id = 204L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Acente"
                        },
                        new
                        {
                            Id = 205L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Akaryakıt İstasyonu"
                        },
                        new
                        {
                            Id = 206L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Aktar & Baharatçı"
                        },
                        new
                        {
                            Id = 207L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Anaokulu & Kreş"
                        },
                        new
                        {
                            Id = 208L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Apartman Dairesi"
                        },
                        new
                        {
                            Id = 209L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Araç Showroom & Servis"
                        },
                        new
                        {
                            Id = 210L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Atölye"
                        },
                        new
                        {
                            Id = 211L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "AVM Standı"
                        },
                        new
                        {
                            Id = 212L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Balıkçı"
                        },
                        new
                        {
                            Id = 213L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Bar"
                        },
                        new
                        {
                            Id = 214L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Bijuteri"
                        },
                        new
                        {
                            Id = 215L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Börekçi"
                        },
                        new
                        {
                            Id = 216L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Büfe"
                        },
                        new
                        {
                            Id = 217L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Büro & Ofis"
                        },
                        new
                        {
                            Id = 218L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Cafe"
                        },
                        new
                        {
                            Id = 219L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "CD & DVD Dükkanı"
                        },
                        new
                        {
                            Id = 220L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Cep Telefonu Dükkanı"
                        },
                        new
                        {
                            Id = 221L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Çamaşırhane"
                        },
                        new
                        {
                            Id = 222L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Çay Ocağı"
                        },
                        new
                        {
                            Id = 223L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Çiçekçi & Fidanlık"
                        },
                        new
                        {
                            Id = 224L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Çiftlik"
                        },
                        new
                        {
                            Id = 225L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Depo & Antrepo"
                        },
                        new
                        {
                            Id = 226L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Düğün Salonu"
                        },
                        new
                        {
                            Id = 227L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Dükkan & Mağaza"
                        },
                        new
                        {
                            Id = 228L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Eczane"
                        },
                        new
                        {
                            Id = 229L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Elektrikçi & Hırdavatçı"
                        },
                        new
                        {
                            Id = 230L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Elektronik"
                        },
                        new
                        {
                            Id = 231L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Fabrika"
                        },
                        new
                        {
                            Id = 232L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Fatura Merkezi"
                        },
                        new
                        {
                            Id = 233L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Fotoğraf Stüdyosu"
                        },
                        new
                        {
                            Id = 234L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Gece Kulübü & Disko"
                        },
                        new
                        {
                            Id = 235L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Giyim Mağazası"
                        },
                        new
                        {
                            Id = 236L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Gözlükçü"
                        },
                        new
                        {
                            Id = 237L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Halı Yıkama"
                        },
                        new
                        {
                            Id = 238L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Huzur Evi"
                        },
                        new
                        {
                            Id = 239L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "İmalathane"
                        },
                        new
                        {
                            Id = 240L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "İnternet & Oyun Cafe"
                        },
                        new
                        {
                            Id = 241L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "İş Hanı"
                        },
                        new
                        {
                            Id = 242L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "İş Hanı Katı & Ofisi"
                        },
                        new
                        {
                            Id = 243L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kasap"
                        },
                        new
                        {
                            Id = 244L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kır & Kahvaltı Bahçesi "
                        },
                        new
                        {
                            Id = 245L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kıraathane"
                        },
                        new
                        {
                            Id = 246L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kırtasiye"
                        },
                        new
                        {
                            Id = 247L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kozmetik Mağazası"
                        },
                        new
                        {
                            Id = 248L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kuaför & Güzellik Merkezi"
                        },
                        new
                        {
                            Id = 249L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kurs & Eğitim Merkezi"
                        },
                        new
                        {
                            Id = 250L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kuru Temizleme"
                        },
                        new
                        {
                            Id = 251L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kuruyemişçi"
                        },
                        new
                        {
                            Id = 252L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Kuyumcu"
                        },
                        new
                        {
                            Id = 253L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Lunapark"
                        },
                        new
                        {
                            Id = 254L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Maden Ocağı"
                        },
                        new
                        {
                            Id = 255L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Manav"
                        },
                        new
                        {
                            Id = 256L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Market"
                        },
                        new
                        {
                            Id = 257L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Matbaa"
                        },
                        new
                        {
                            Id = 258L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Medikal Market"
                        },
                        new
                        {
                            Id = 259L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Modaevi"
                        },
                        new
                        {
                            Id = 260L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Muayenehane"
                        },
                        new
                        {
                            Id = 261L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Nakliyat & Kargo"
                        },
                        new
                        {
                            Id = 262L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Nalbur"
                        },
                        new
                        {
                            Id = 263L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Okul"
                        },
                        new
                        {
                            Id = 264L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Otopark / Garaj"
                        },
                        new
                        {
                            Id = 265L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Oto Servis & Bakım"
                        },
                        new
                        {
                            Id = 266L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Oto Yedek Parça"
                        },
                        new
                        {
                            Id = 267L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Oto Yıkama & Kuaför"
                        },
                        new
                        {
                            Id = 268L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Öğrenci Yurdu"
                        },
                        new
                        {
                            Id = 269L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Pastane & Fırın"
                        },
                        new
                        {
                            Id = 270L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Pazar Yeri"
                        },
                        new
                        {
                            Id = 271L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Pet Shop"
                        },
                        new
                        {
                            Id = 272L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Plaza"
                        },
                        new
                        {
                            Id = 273L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Plaza Katı & Ofisi"
                        },
                        new
                        {
                            Id = 274L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Prova & Kayıt Stüdyosu"
                        },
                        new
                        {
                            Id = 275L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Radyo İstasyonu & TV Kanalı"
                        },
                        new
                        {
                            Id = 276L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Residence Katı & Ofisi"
                        },
                        new
                        {
                            Id = 277L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Restoran & Lokanta"
                        },
                        new
                        {
                            Id = 278L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Saat Mağazası"
                        },
                        new
                        {
                            Id = 279L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Sağlık Merkezi"
                        },
                        new
                        {
                            Id = 280L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Sebze & Meyve Hali"
                        },
                        new
                        {
                            Id = 281L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Sinema & Konferans Salonu"
                        },
                        new
                        {
                            Id = 282L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Soğuk Hava Deposu"
                        },
                        new
                        {
                            Id = 283L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "SPA, Hamam & Sauna"
                        },
                        new
                        {
                            Id = 284L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Spor Tesisi"
                        },
                        new
                        {
                            Id = 285L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Su & Tüp Bayi"
                        },
                        new
                        {
                            Id = 286L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Şans Oyunları Bayisi"
                        },
                        new
                        {
                            Id = 287L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Şarküteri"
                        },
                        new
                        {
                            Id = 288L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Taksi Durağı"
                        },
                        new
                        {
                            Id = 289L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Tamirhane"
                        },
                        new
                        {
                            Id = 290L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Tekel Bayi"
                        },
                        new
                        {
                            Id = 291L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Teknik Servis"
                        },
                        new
                        {
                            Id = 292L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Terzi"
                        },
                        new
                        {
                            Id = 293L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Tuhafiye"
                        },
                        new
                        {
                            Id = 294L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Tuvalet"
                        },
                        new
                        {
                            Id = 295L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Veteriner"
                        },
                        new
                        {
                            Id = 296L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 8L,
                            Title = "Züccaciye"
                        },
                        new
                        {
                            Id = 297L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 13L,
                            Title = "Otel"
                        },
                        new
                        {
                            Id = 298L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 13L,
                            Title = "Apart Otel"
                        },
                        new
                        {
                            Id = 299L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 13L,
                            Title = "Butik Otel"
                        },
                        new
                        {
                            Id = 300L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 13L,
                            Title = "Motel"
                        },
                        new
                        {
                            Id = 301L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 13L,
                            Title = "Pansiyon"
                        },
                        new
                        {
                            Id = 302L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 13L,
                            Title = "Kamp Yeri (Mocamp)"
                        },
                        new
                        {
                            Id = 303L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 13L,
                            Title = "Tatil Köyü"
                        },
                        new
                        {
                            Id = 304L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Otel"
                        },
                        new
                        {
                            Id = 305L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Apart Otel"
                        },
                        new
                        {
                            Id = 306L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Butik Otel"
                        },
                        new
                        {
                            Id = 307L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Motel"
                        },
                        new
                        {
                            Id = 308L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Pansiyon"
                        },
                        new
                        {
                            Id = 309L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Kamp Yeri (Mocamp)"
                        },
                        new
                        {
                            Id = 310L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Tatil Köyü"
                        },
                        new
                        {
                            Id = 311L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            PropertyStatusId = 14L,
                            Title = "Plaj"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Reminder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long?>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<long?>("EntryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EntryId");

                    b.HasIndex("UserId");

                    b.ToTable("Reminder");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Street", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("NeighborhoodKey")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.UsingStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("UsingStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Boş"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Mülk Sahibi"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2000, 12, 31, 22, 0, 0, 0, DateTimeKind.Utc),
                            IsActive = true,
                            IsDeleted = false,
                            Title = "Kiracılı"
                        });
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.PropertyListingPhoto", b =>
                {
                    b.HasBaseType("RealEstateWebApi.Domain.Entities.File");

                    b.Property<string>("OuterPropertyListingId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SortIndex")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("PropertyListingPhoto");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.PropertyPhoto", b =>
                {
                    b.HasBaseType("RealEstateWebApi.Domain.Entities.File");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortIndex")
                        .HasColumnType("integer");

                    b.ToTable("Files", t =>
                        {
                            t.Property("SortIndex")
                                .HasColumnName("PropertyPhoto_SortIndex");
                        });

                    b.HasDiscriminator().HasValue("PropertyPhoto");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Commercial", b =>
                {
                    b.HasBaseType("RealEstateWebApi.Domain.Entities.Property");

                    b.Property<bool>("AlcoholLicense")
                        .HasColumnType("boolean");

                    b.Property<int>("BathroomCount")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingAge")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingCount")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingFloor")
                        .HasColumnType("integer");

                    b.Property<string>("BuildingStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BuildingTotalFloor")
                        .HasColumnType("integer");

                    b.Property<string>("BuildingType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CeilingHeightMeters")
                        .HasColumnType("integer");

                    b.Property<int?>("DailySaleFuelLiter")
                        .HasColumnType("integer");

                    b.Property<long>("DeedStatusId")
                        .HasColumnType("bigint");

                    b.Property<double?>("Deposit")
                        .HasColumnType("double precision");

                    b.Property<string>("DepositCurrency")
                        .HasColumnType("text");

                    b.Property<int>("ElevatorCount")
                        .HasColumnType("integer");

                    b.Property<int>("EntryHeightMeters")
                        .HasColumnType("integer");

                    b.Property<double?>("Fees")
                        .HasColumnType("double precision");

                    b.Property<string>("FeesCurrency")
                        .HasColumnType("text");

                    b.Property<string>("GroundSurvey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("HeatingTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("IndoorSquareMeters")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAvailableLoan")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBarter")
                        .HasColumnType("boolean");

                    b.Property<bool>("MiningLicense")
                        .HasColumnType("boolean");

                    b.Property<int>("OutdoorSquareMeters")
                        .HasColumnType("integer");

                    b.Property<int>("PeopleCapacity")
                        .HasColumnType("integer");

                    b.Property<int?>("PumpCount")
                        .HasColumnType("integer");

                    b.Property<double>("SectionAndRoomCount")
                        .HasColumnType("double precision");

                    b.Property<int>("TableCapacity")
                        .HasColumnType("integer");

                    b.Property<long>("UsingStatusId")
                        .HasColumnType("bigint");

                    b.Property<int>("VehicleCapacity")
                        .HasColumnType("integer");

                    b.ToTable("Properties", t =>
                        {
                            t.Property("Deposit")
                                .HasColumnName("Commercial_Deposit");

                            t.Property("DepositCurrency")
                                .HasColumnName("Commercial_DepositCurrency");
                        });

                    b.HasDiscriminator().HasValue("Commercial");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Land", b =>
                {
                    b.HasBaseType("RealEstateWebApi.Domain.Entities.Property");

                    b.Property<int?>("BlockNo")
                        .HasColumnType("integer");

                    b.Property<double?>("Deposit")
                        .HasColumnType("double precision");

                    b.Property<string>("DepositCurrency")
                        .HasColumnType("text");

                    b.Property<bool>("ExchangeForBuilding")
                        .HasColumnType("boolean");

                    b.Property<double?>("FloorAreaRatio")
                        .HasColumnType("double precision");

                    b.Property<double?>("Gabari")
                        .HasColumnType("double precision");

                    b.Property<int?>("LayoutNo")
                        .HasColumnType("integer");

                    b.Property<int?>("PlotNo")
                        .HasColumnType("integer");

                    b.Property<string>("ReconstructionStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Land");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Residential", b =>
                {
                    b.HasBaseType("RealEstateWebApi.Domain.Entities.Property");

                    b.Property<int>("BathRoomCount")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingAge")
                        .HasColumnType("integer");

                    b.Property<int?>("BuildingFloor")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingTotalFloor")
                        .HasColumnType("integer");

                    b.Property<long>("DeedStatusId")
                        .HasColumnType("bigint");

                    b.Property<double?>("Deposit")
                        .HasColumnType("double precision");

                    b.Property<string>("DepositCurrency")
                        .HasColumnType("text");

                    b.Property<double?>("Fees")
                        .HasColumnType("double precision");

                    b.Property<string>("FeesCurrency")
                        .HasColumnType("text");

                    b.Property<int>("GarageCount")
                        .HasColumnType("integer");

                    b.Property<long>("HeatingTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IsAvailableLoan")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBalcony")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsBarter")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsElevator")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsFurnished")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOnSite")
                        .HasColumnType("boolean");

                    b.Property<int>("LivingRoomCount")
                        .HasColumnType("integer");

                    b.Property<int?>("RemainingInstallment")
                        .HasColumnType("integer");

                    b.Property<double?>("RemainingPaymentAmount")
                        .HasColumnType("double precision");

                    b.Property<double>("RoomCount")
                        .HasColumnType("double precision");

                    b.Property<string>("SiteName")
                        .HasColumnType("text");

                    b.Property<int?>("SpaceSquareMeters")
                        .HasColumnType("integer");

                    b.Property<long>("UsingStatusId")
                        .HasColumnType("bigint");

                    b.ToTable("Properties", t =>
                        {
                            t.Property("BuildingAge")
                                .HasColumnName("Residential_BuildingAge");

                            t.Property("BuildingFloor")
                                .HasColumnName("Residential_BuildingFloor");

                            t.Property("BuildingTotalFloor")
                                .HasColumnName("Residential_BuildingTotalFloor");

                            t.Property("DeedStatusId")
                                .HasColumnName("Residential_DeedStatusId");

                            t.Property("Deposit")
                                .HasColumnName("Residential_Deposit");

                            t.Property("DepositCurrency")
                                .HasColumnName("Residential_DepositCurrency");

                            t.Property("Fees")
                                .HasColumnName("Residential_Fees");

                            t.Property("FeesCurrency")
                                .HasColumnName("Residential_FeesCurrency");

                            t.Property("HeatingTypeId")
                                .HasColumnName("Residential_HeatingTypeId");

                            t.Property("IsAvailableLoan")
                                .HasColumnName("Residential_IsAvailableLoan");

                            t.Property("IsBarter")
                                .HasColumnName("Residential_IsBarter");

                            t.Property("UsingStatusId")
                                .HasColumnName("Residential_UsingStatusId");
                        });

                    b.HasDiscriminator().HasValue("Residential");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Tourism", b =>
                {
                    b.HasBaseType("RealEstateWebApi.Domain.Entities.Property");

                    b.Property<int>("ApartCount")
                        .HasColumnType("integer");

                    b.Property<int>("BedCount")
                        .HasColumnType("integer");

                    b.Property<int>("BuildingAge")
                        .HasColumnType("integer");

                    b.Property<string>("BuildingStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BuildingTotalFloor")
                        .HasColumnType("integer");

                    b.Property<string>("GroundSurvey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IndoorSquareMeters")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAvailableLoan")
                        .HasColumnType("boolean");

                    b.Property<int>("OutdoorSquareMeters")
                        .HasColumnType("integer");

                    b.Property<int>("RoomCount")
                        .HasColumnType("integer");

                    b.Property<int>("StarCount")
                        .HasColumnType("integer");

                    b.Property<int>("TotalLandAcres")
                        .HasColumnType("integer");

                    b.ToTable("Properties", t =>
                        {
                            t.Property("BuildingAge")
                                .HasColumnName("Tourism_BuildingAge");

                            t.Property("BuildingStatus")
                                .HasColumnName("Tourism_BuildingStatus");

                            t.Property("BuildingTotalFloor")
                                .HasColumnName("Tourism_BuildingTotalFloor");

                            t.Property("GroundSurvey")
                                .HasColumnName("Tourism_GroundSurvey");

                            t.Property("IndoorSquareMeters")
                                .HasColumnName("Tourism_IndoorSquareMeters");

                            t.Property("IsAvailableLoan")
                                .HasColumnName("Tourism_IsAvailableLoan");

                            t.Property("OutdoorSquareMeters")
                                .HasColumnName("Tourism_OutdoorSquareMeters");

                            t.Property("RoomCount")
                                .HasColumnName("Tourism_RoomCount");
                        });

                    b.HasDiscriminator().HasValue("Tourism");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Agent", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Identity.User", null)
                        .WithOne()
                        .HasForeignKey("RealEstateWebApi.Domain.Entities.Agent", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.JobTitle", null)
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Blog", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Agent", null)
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.File", null)
                        .WithMany()
                        .HasForeignKey("BlogPageImgFileId");

                    b.HasOne("RealEstateWebApi.Domain.Entities.BlogType", null)
                        .WithMany()
                        .HasForeignKey("BlogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.BlogType", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Client", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.File", null)
                        .WithMany()
                        .HasForeignKey("LogoImgFileId");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Customer", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.City", null)
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.District", null)
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Neighborhood", null)
                        .WithMany()
                        .HasForeignKey("NeighborhoodId");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.CustomerOwnedProperty", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Property", null)
                        .WithMany()
                        .HasForeignKey("PropertyId");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.CustomerSearchProperty", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Entry", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.EntrySubType", null)
                        .WithMany()
                        .HasForeignKey("EntrySubTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.EntryType", null)
                        .WithMany()
                        .HasForeignKey("EntryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.EntrySubType", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.EntryType", null)
                        .WithMany()
                        .HasForeignKey("EntryTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Identity.User", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.File", null)
                        .WithMany()
                        .HasForeignKey("ProfileImgFileId");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Identity.UserOperationClaim", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Identity.OperationClaim", null)
                        .WithMany()
                        .HasForeignKey("OperationClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.JobTitle", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Message", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Property", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Agent", null)
                        .WithMany()
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.City", null)
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientId");

                    b.HasOne("RealEstateWebApi.Domain.Entities.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("RealEstateWebApi.Domain.Entities.District", null)
                        .WithMany()
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Neighborhood", null)
                        .WithMany()
                        .HasForeignKey("NeighborhoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.PropertyCategory", null)
                        .WithMany()
                        .HasForeignKey("PropertyCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.PropertyStatus", null)
                        .WithMany()
                        .HasForeignKey("PropertyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.PropertyType", null)
                        .WithMany()
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RealEstateWebApi.Domain.Entities.Street", null)
                        .WithMany()
                        .HasForeignKey("StreetId");
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.PropertyStatus", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.PropertyCategory", null)
                        .WithMany()
                        .HasForeignKey("PropertyCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.PropertyType", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.PropertyStatus", null)
                        .WithMany()
                        .HasForeignKey("PropertyStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RealEstateWebApi.Domain.Entities.Reminder", b =>
                {
                    b.HasOne("RealEstateWebApi.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("RealEstateWebApi.Domain.Entities.Entry", null)
                        .WithMany()
                        .HasForeignKey("EntryId");

                    b.HasOne("RealEstateWebApi.Domain.Entities.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
